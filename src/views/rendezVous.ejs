<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rendez-vous</title>
</head>
<body>
  <form action="/rendez-vous/create" method="post">
    <!-- Agence -->
    <label for="agence">Choisissez une agence :</label>
    <select id="agence" name="agence_id" onchange="loadEmployes(this.value)" required>
      <option value="">--Sélectionner une agence--</option>
      <% agences.forEach(agence => { %>
        <option value="<%= agence.id %>"><%= agence.nom %></option>
      <% }) %>
    </select>
  
    <!-- Employé -->
    <label for="employe">Choisissez un employé :</label>
    <select id="employe" name="employe_id" onchange="enableDate()" required disabled>
      <option>Sélectionnez une agence d'abord</option>
    </select>
  
    <!-- Date -->
    <label for="date">Choisissez une date :</label>
    <input type="date" id="date" name="date" onchange="loadCreneaux()" required disabled>
  
    <!-- Créneau -->
    <label for="creneau">Créneau horaire :</label>
    <select id="creneau" name="creneau" required disabled>
      <option>Sélectionnez une date</option>
    </select><br>

        <!-- Véhicules -->
        <label for="vehicule">Choisissez votre véhicule à nettoyer :</label>
        <select id="vehicule" name="vehicule_id" required>
          <option value="">--Sélectionner votre véhicule--</option>
          <% vehicules.forEach(vehicule => { %>
            <option value="<%= vehicule.id %>"><%= vehicule.marque %> - <%= vehicule.modele %></option>
          <% }) %>
        </select><br>

    <!-- Type de nettoyage -->
    <label>Type de nettoyage :</label><br>
    <% typesNettoyages.forEach(type => { %>
      <input type="radio" id="type-<%= type.id %>" name="type_nettoyage_id" value="<%= type.id %>" data-prix="<%= type.prix_base %>" required onchange="updatePrixTotal()">
      <label for="type-<%= type.id %>"><%= type.libelle %> - <%= parseFloat(type.prix_base).toFixed(2) %> €</label><br>
      <% }) %>


    <!-- Options supplémentaires -->
    <label>Options supplémentaires :</label><br>
    <% optionsSupplementaires.forEach(option => { %>
      <input type="checkbox" id="option-<%= option.id %>" name="options_supplementaires[]" value="<%= option.id %>" data-prix="<%= option.prix %>" onchange="updatePrixTotal()" disabled>
      <label for="option-<%= option.id %>"><%= option.libelle %> - <%= parseFloat(option.prix).toFixed(2) %> €</label><br>
    <% }) %>


    <input type="hidden" id="prix_total" name="prix_total" value="0">
    <p><strong>Prix total : <span id="prix-total">0.00</span> €</strong></p>

  
    <button type="submit">Réserver</button>
  </form>
  
  <script>
    // Empêcher la sélection d'une date passée
    document.addEventListener('DOMContentLoaded', () => {
      const dateInput = document.getElementById('date');
      dateInput.min = new Date().toISOString().split('T')[0];
    });
    
    // Récupérer les employés d'une agence
    async function loadEmployes(agenceId) {
      if (!agenceId) return;
    
      try {
        const response = await fetch(`/api/employes/${agenceId}`);
        const employes = await response.json();
        const employeSelect = document.getElementById('employe');
    
        employeSelect.innerHTML = '<option disabled selected>--Sélectionner un employé--</option>';
    
        employes.forEach(e => {
          employeSelect.innerHTML += `<option value="${e.id}">${e.nom} ${e.prenom}</option>`;
        });
    
        employeSelect.disabled = false;
        resetDateEtCreneau();
        validateForm();
      } catch (error) {
        console.error('Erreur lors du chargement des employés', error);
      }
    }
    
    // Activer le champ date après choix d'un employé
    function enableDate() {
      document.getElementById('date').disabled = false;
      resetCreneau();
      validateForm();
    }
    
    // Récupérer les créneaux disponibles
    async function loadCreneaux() {
      const employeId = document.getElementById('employe').value;
      const date = document.getElementById('date').value;
      const creneauSelect = document.getElementById('creneau');
    
      if (!employeId || !date) return;
    
      try {
        const response = await fetch(`/api/disponibilites/${employeId}/${date}`);
        const creneaux = await response.json();
    
        creneauSelect.innerHTML = creneaux.length
          ? creneaux.map(c => `<option value="${c.heure}">${c.heure}</option>`).join('')
          : '<option>Aucun créneau disponible</option>';
    
        creneauSelect.disabled = creneaux.length === 0;
        validateForm();
      } catch (error) {
        console.error('Erreur lors du chargement des créneaux', error);
      }
    }
    
    // Mettre à jour le prix total
    function updatePrixTotal() {
      let total = 0;
    
      const typeSelected = document.querySelector('input[name="type_nettoyage_id"]:checked');
      if (typeSelected) {
        total += parseFloat(typeSelected.dataset.prix);
        toggleOptionsSupplementaires(true);
      } else {
        toggleOptionsSupplementaires(false);
      }
    
      document.querySelectorAll('input[name="options_supplementaires[]"]:checked').forEach(option => {
        total += parseFloat(option.dataset.prix);
      });
    
      document.getElementById('prix-total').textContent = total.toFixed(2);
      document.getElementById('prix_total').value = total.toFixed(2);
    }
    
    // Activer / désactiver les options supplémentaires
    function toggleOptionsSupplementaires(enable) {
      document.querySelectorAll('input[name="options_supplementaires[]"]').forEach(checkbox => {
        checkbox.disabled = false; // pour que le formulaire envoie quand même
        checkbox.parentElement.style.display = enable ? 'block' : 'none';
      });
    }
    
    // Réinitialiser les champs date et créneau
    function resetDateEtCreneau() {
      document.getElementById('date').value = "";
      document.getElementById('date').disabled = true;
      resetCreneau();
    }
    
    // Réinitialiser le champ créneau
    function resetCreneau() {
      const creneauSelect = document.getElementById('creneau');
      creneauSelect.innerHTML = '<option>Sélectionnez une date</option>';
      creneauSelect.disabled = true;
    }
    
    // Vérifier la validité du formulaire
    function validateForm() {
      const employeValid = document.getElementById('employe').value !== "";
      const dateValid = document.getElementById('date').value !== "";
      const creneauValid = document.getElementById('creneau').value !== "";
      document.querySelector('button[type="submit"]').disabled = !(employeValid && dateValid && creneauValid);
    }
    </script>
    
  
</body>
</html>