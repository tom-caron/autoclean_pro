<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rendez-vous</title>
    <link rel="stylesheet" href="style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Dela+Gothic+One&family=Quicksand:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
  <%- include('./partials/sidebar.ejs') %>

  <div class="container py-5">
    <div>
      <h1 class="mb-4 fw-bold" style="font-family: 'Dela Gothic One', cursive;">Prendre un rendez-vous</h1>
    </div>
  
    <form class="bg-light p-4 rounded shadow" action="/rendez-vous/create" method="post">
      
      <!-- Agence -->
      <div class="mb-3">
        <label for="agence" class="form-label">Choisissez une agence :</label>
        <select id="agence" name="agence_id" class="form-select" onchange="loadEmployes(this.value)" required>
          <option value="">--Sélectionner une agence--</option>
          <% agences.forEach(agence => { %>
            <option value="<%= agence.id %>"><%= agence.nom %></option>
          <% }) %>
        </select>
      </div>
  
      <!-- Employé -->
      <div class="mb-3">
        <label for="employe" class="form-label">Choisissez un employé :</label>
        <select id="employe" name="employe_id" class="form-select" onchange="enableDate()" required disabled>
          <option>Sélectionnez une agence d'abord</option>
        </select>
      </div>
  
      <!-- Date -->
      <div class="mb-3">
        <label for="date" class="form-label">Choisissez une date :</label>
        <input type="date" id="date" name="date" class="form-control" onchange="loadCreneaux()" required disabled>
      </div>
  
      <!-- Créneau -->
      <div class="mb-3">
        <label for="creneau" class="form-label">Créneau horaire :</label>
        <select id="creneau" name="creneau" class="form-select" required disabled>
          <option>Sélectionnez une date</option>
        </select>
      </div>
  
      <!-- Véhicule -->
      <div class="mb-3">
        <label for="vehicule" class="form-label">Choisissez votre véhicule à nettoyer :</label>
        <select id="vehicule" name="vehicule_id" class="form-select" required>
          <option value="">--Sélectionner votre véhicule--</option>
          <% vehicules.forEach(vehicule => { %>
            <option value="<%= vehicule.id %>">
              <%= vehicule.marque %> - <%= vehicule.modele %>
            </option>
          <% }) %>
        </select>
      </div>
  
      <!-- Type de nettoyage -->
      <fieldset class="mb-3">
        <legend class="h6 mb-2">Type de nettoyage :</legend>
        <% typesNettoyages.forEach(type => { %>
          <div class="form-check">
            <input
              class="form-check-input"
              type="radio"
              id="type-<%= type.id %>"
              name="type_nettoyage_id"
              value="<%= type.id %>"
              data-prix="<%= type.prix_base %>"
              required
              onchange="updatePrixTotal()"
            >
            <label class="form-check-label" for="type-<%= type.id %>">
              <%= type.libelle %> - <%= parseFloat(type.prix_base).toFixed(2) %> €
            </label>
          </div>
        <% }) %>
      </fieldset>
  
      <!-- Options supplémentaires -->
      <fieldset class="mb-3">
        <legend class="h6 mb-2">Options supplémentaires :</legend>
        <% optionsSupplementaires.forEach(option => { %>
          <div class="form-check">
            <input
              class="form-check-input"
              type="checkbox"
              id="option-<%= option.id %>"
              name="options_supplementaires[]"
              value="<%= option.id %>"
              data-prix="<%= option.prix %>"
              onchange="updatePrixTotal()"
              disabled
            >
            <label class="form-check-label" for="option-<%= option.id %>">
              <%= option.libelle %> - <%= parseFloat(option.prix).toFixed(2) %> €
            </label>
          </div>
        <% }) %>
      </fieldset>
  
      <!-- Prix total -->
      <div class="mb-3">
        <input type="hidden" id="prix_total" name="prix_total" value="0">
        <p class="mt-3">Prix total :
          <span id="prix-total" class="badge bg-success fs-5">0.00 €</span>
        </p>
      </div>
  
      <!-- Soumission -->
      <div class="mb-3">
        <button type="submit" class="btn btn-primary w-100" disabled>
          <i class="fas fa-calendar-check me-2"></i>Réserver
        </button>
      </div>
  
    </form>
  </div>
  
  
  <script>
    // Empêcher la sélection d'une date passée
    document.addEventListener('DOMContentLoaded', () => {
      const dateInput = document.getElementById('date');
      dateInput.min = new Date().toISOString().split('T')[0];
    });
    
    // Récupérer les employés d'une agence
    async function loadEmployes(agenceId) {
      if (!agenceId) return;
    
      try {
        const response = await fetch(`/api/employes/${agenceId}`);
        const employes = await response.json();
        const employeSelect = document.getElementById('employe');
    
        employeSelect.innerHTML = '<option disabled selected>--Sélectionner un employé--</option>';
    
        employes.forEach(e => {
          employeSelect.innerHTML += `<option value="${e.id}">${e.nom} ${e.prenom}</option>`;
        });
    
        employeSelect.disabled = false;
        resetDateEtCreneau();
        validateForm();
      } catch (error) {
        console.error('Erreur lors du chargement des employés', error);
      }
    }
    
    // Activer le champ date après choix d'un employé
    function enableDate() {
      document.getElementById('date').disabled = false;
      resetCreneau();
      validateForm();
    }
    
    // Récupérer les créneaux disponibles
    async function loadCreneaux() {
      const employeId = document.getElementById('employe').value;
      const date = document.getElementById('date').value;
      const creneauSelect = document.getElementById('creneau');
    
      if (!employeId || !date) return;
    
      try {
        const response = await fetch(`/api/disponibilites/${employeId}/${date}`);
        const creneaux = await response.json();
    
        creneauSelect.innerHTML = creneaux.length
          ? creneaux.map(c => `<option value="${c.heure}">${c.heure}</option>`).join('')
          : '<option>Aucun créneau disponible</option>';
    
        creneauSelect.disabled = creneaux.length === 0;
        validateForm();
      } catch (error) {
        console.error('Erreur lors du chargement des créneaux', error);
      }
    }
    
    // Mettre à jour le prix total
    function updatePrixTotal() {
      let total = 0;
    
      const typeSelected = document.querySelector('input[name="type_nettoyage_id"]:checked');
      if (typeSelected) {
        total += parseFloat(typeSelected.dataset.prix);
        toggleOptionsSupplementaires(true);
      } else {
        toggleOptionsSupplementaires(false);
      }
    
      document.querySelectorAll('input[name="options_supplementaires[]"]:checked').forEach(option => {
        total += parseFloat(option.dataset.prix);
      });
    
      document.getElementById('prix-total').textContent = total.toFixed(2);
      document.getElementById('prix_total').value = total.toFixed(2);
    }
    
    // Activer / désactiver les options supplémentaires
    function toggleOptionsSupplementaires(enable) {
      document.querySelectorAll('input[name="options_supplementaires[]"]').forEach(checkbox => {
        checkbox.disabled = false; // pour que le formulaire envoie quand même
        checkbox.parentElement.style.display = enable ? 'block' : 'none';
      });
    }
    
    // Réinitialiser les champs date et créneau
    function resetDateEtCreneau() {
      document.getElementById('date').value = "";
      document.getElementById('date').disabled = true;
      resetCreneau();
    }
    
    // Réinitialiser le champ créneau
    function resetCreneau() {
      const creneauSelect = document.getElementById('creneau');
      creneauSelect.innerHTML = '<option>Sélectionnez une date</option>';
      creneauSelect.disabled = true;
    }
    
    // Vérifier la validité du formulaire
    function validateForm() {
      const employeValid = document.getElementById('employe').value !== "";
      const dateValid = document.getElementById('date').value !== "";
      const creneauValid = document.getElementById('creneau').value !== "";
      document.querySelector('button[type="submit"]').disabled = !(employeValid && dateValid && creneauValid);
    }
    </script>
    
  
</body>
</html>